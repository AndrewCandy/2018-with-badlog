// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package frc.robot.commands;
import edu.wpi.first.wpilibj.command.Command;
import frc.robot.Robot;

/**
 *
 */
public class Dock extends Command {

    //private boolean toggle = false;

    
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public Dock() {
        
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.driveTrain);
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() { 
        double outputPercent = 0.0;
        //outputPercent = .009*Math.pow(Robot.vision.getTargetAngle(), 3)+.2;
        outputPercent = Math.abs(.20);
        //outputPercent = .2;//1/9000 * Math.pow(Robot.vision.getTargetAngle(),3)+.15;

        if (Robot.vision.getTargetAngle() > 0)
        {
            System.out.println(outputPercent);
            Robot.driveTrain.drive(-outputPercent, outputPercent);
        }
        else
        {
            System.out.println(outputPercent);
            Robot.driveTrain.drive(-outputPercent, outputPercent);
        }
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
    	
    	if (Math.abs(Robot.vision.getTargetAngle()) > 1.5 && Math.abs(Robot.vision.getTargetAngle()) != 99.99)
    	{
    		return false;
    	}
    	else
    	{
    		return true;
    	}
    }

    

    // Called once after isFinished returns true
    protected void end() {
        Robot.driveTrain.drive(0, 0);
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
        Robot.driveTrain.drive(0, 0);
    }

}
